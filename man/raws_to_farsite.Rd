% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utility_functions.R
\name{raws_to_farsite}
\alias{raws_to_farsite}
\title{Convert RAWS weather data to FARSITE 4 format}
\usage{
raws_to_farsite(rawsfile, wtrfile, wndfile, elev, units = c("metric",
  "english"), varnames.as.comment = FALSE)
}
\arguments{
\item{rawsfile}{Path to a RAWS format data file. This is allowed to have
comment lines (first character \code{'#'}), e.g. for variable names. It may
also have a non-comment header line for units, specified by a character
string: either 'metric' or 'english' (case is ignored). Data records should
have space-delimited values as follows: year, month, day, time (24hr
format, e.g. '1500'), temperature, relative humidity, rainfall, wind speed,
wind direction, cloud cover.}

\item{wtrfile}{Path for the output daily summary data file. FARSITE expects a
'.wtr' extension.}

\item{wndfile}{Path for the output hourly wind data file. FARSITE expects a
'.wnd' extension.}

\item{elev}{A single integer value for elevation that will be written to each
record of the daily summary (.wtr) file.}

\item{units}{Measurement units: either 'metric' (default) or 'english'. Case
is ignored. Ignored if there is a header line in the RAWS input file
specifying units.}

\item{varnames.as.comment}{If TRUE, write variable names as a comment line in
each output file.}
}
\description{
The command line version of FARSITE can accept a single set of hourly weather
data in RAWS (Remote Automated Weather Station) format or, alternatively,
separate sets of summary weather data (daily values for temperature, humidity
and rainfall) and wind data (hourly values of speed and direction plus cloud
cover). The Windows version of FARSITE only accepts weather data in the
separate sets format. This function reads a file of RAWS format hourly data
and writes two separate files of summary and wind data.
}
\details{
Note that, for some reason, FARSITE expects integer values for all variables
when the data are provided as separate daily summary and hourly wind files,
but, from inspection of the C++ source code, it accepts floating point values
for temperature when the data are in RAWS format (for some reason, rainfall
and humidity are read as integers).
}
